{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web-Development\\\\TradingApplication\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\CsvStockUploader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Papa from 'papaparse';\nimport axios from '../../api/axios';\nimport { Button, Typography, Paper, CircularProgress, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CsvStockUploader() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [parsedData, setParsedData] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setMessage(null);\n    setError(null);\n  };\n  const handleUpload = () => {\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: async result => {\n        const rawData = result.data;\n        const formattedData = rawData.map(row => ({\n          date: row[\"Date\"],\n          symbol: row[\"Symbol\"],\n          code: row[\"Code\"],\n          companyName: row[\"Company Name\"],\n          openPrice: parseFloat(row[\"Open Price\"]),\n          highPrice: parseFloat(row[\"High Price\"]),\n          lowPrice: parseFloat(row[\"Low Price\"]),\n          closePrice: parseFloat(row[\"Close Price\"]),\n          volume: parseInt(row[\"Volume\"], 10),\n          previousClose: parseFloat(row[\"Previous Close\"])\n        }));\n        setParsedData(formattedData);\n        try {\n          setUploading(true);\n          await axios.post('/api/stocks/upload', {\n            stocks: formattedData\n          });\n          setMessage('Upload successful!');\n          setError(null);\n        } catch (err) {\n          console.error(err);\n          setError('Upload failed.');\n          setMessage(null);\n        } finally {\n          setUploading(false);\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    style: {\n      padding: '20px',\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Upload CSV Stock Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleUpload,\n      variant: \"contained\",\n      style: {\n        marginTop: '10px'\n      },\n      disabled: !file || uploading,\n      children: uploading ? 'Uploading...' : 'Upload'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), uploading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n      style: {\n        marginLeft: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      style: {\n        marginTop: '10px'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      style: {\n        marginTop: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(CsvStockUploader, \"iG9GEaCFNj+HWqAmsRUX88llRxE=\");\n_c = CsvStockUploader;\nvar _c;\n$RefreshReg$(_c, \"CsvStockUploader\");","map":{"version":3,"names":["React","useState","Papa","axios","Button","Typography","Paper","CircularProgress","Alert","jsxDEV","_jsxDEV","CsvStockUploader","_s","file","setFile","parsedData","setParsedData","uploading","setUploading","message","setMessage","error","setError","handleFileChange","e","target","files","handleUpload","parse","header","skipEmptyLines","complete","result","rawData","data","formattedData","map","row","date","symbol","code","companyName","openPrice","parseFloat","highPrice","lowPrice","closePrice","volume","parseInt","previousClose","post","stocks","err","console","elevation","style","padding","margin","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","marginTop","disabled","marginLeft","severity","_c","$RefreshReg$"],"sources":["D:/Web-Development/TradingApplication/frontend/src/components/Dashboard/CsvStockUploader.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Papa from 'papaparse';\r\nimport axios from '../../api/axios';\r\nimport \r\n{ \r\n  Button, \r\n  Typography, \r\n  Paper, \r\n  CircularProgress, \r\n  Alert \r\n} from '@mui/material';\r\nexport default function CsvStockUploader() \r\n{\r\n  const [file, setFile] = useState(null);\r\n  const [parsedData, setParsedData] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const handleFileChange = (e) => \r\n  {\r\n    setFile(e.target.files[0]);\r\n    setMessage(null);\r\n    setError(null);\r\n  };\r\n  const handleUpload = () => \r\n  {\r\n    if (!file) return;\r\n    Papa.parse(file, \r\n    {\r\n      header: true,\r\n      skipEmptyLines: true,\r\n      complete: async (result) => \r\n      {\r\n        const rawData = result.data;\r\n        const formattedData = rawData.map((row) => (\r\n        {\r\n          date: row[\"Date\"],\r\n          symbol: row[\"Symbol\"],\r\n          code: row[\"Code\"],\r\n          companyName: row[\"Company Name\"],\r\n          openPrice: parseFloat(row[\"Open Price\"]),\r\n          highPrice: parseFloat(row[\"High Price\"]),\r\n          lowPrice: parseFloat(row[\"Low Price\"]),\r\n          closePrice: parseFloat(row[\"Close Price\"]),\r\n          volume: parseInt(row[\"Volume\"], 10),\r\n          previousClose: parseFloat(row[\"Previous Close\"])\r\n        }));\r\n        setParsedData(formattedData);\r\n        try \r\n        {\r\n          setUploading(true);\r\n          await axios.post('/api/stocks/upload', { stocks: formattedData });\r\n          setMessage('Upload successful!');\r\n          setError(null);\r\n        } \r\n        catch (err) \r\n        {\r\n          console.error(err);\r\n          setError('Upload failed.');\r\n          setMessage(null);\r\n        } \r\n        finally \r\n        {\r\n          setUploading(false);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Paper elevation={3} style={{ padding: '20px', margin: '20px' }}>\r\n      <Typography variant=\"h6\">Upload CSV Stock Data</Typography>\r\n      <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n      <Button\r\n        onClick={handleUpload}\r\n        variant=\"contained\"\r\n        style={{ marginTop: '10px' }}\r\n        disabled={!file || uploading}\r\n      >\r\n        {uploading ? 'Uploading...' : 'Upload'}\r\n      </Button>\r\n      {uploading && <CircularProgress style={{ marginLeft: '10px' }} />}\r\n      {message && <Alert severity=\"success\" style={{ marginTop: '10px' }}>{message}</Alert>}\r\n      {error && <Alert severity=\"error\" style={{ marginTop: '10px' }}>{error}</Alert>}\r\n    </Paper>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}