{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web-Development\\\\TradingApplication\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\PortfolioForm.jsx\",\n  _s = $RefreshSig$();\nimport axios from '../../api/axios';\nimport React, { useEffect, useState } from 'react';\nimport { Table, TableHead, TableBody, TableRow, TableCell, Paper, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioScreen = () => {\n  _s();\n  const [portfolio, setPortfolio] = useState([]);\n  const [summary, setSummary] = useState({});\n  const fetchPortfolio = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5000/api/portfolio', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // Demo only: populate data\n      setPortfolio(response.data.portfolio || []);\n      setSummary(response.data.summary || {});\n    } catch (err) {\n      console.error('Failed to fetch portfolio:', err);\n    }\n  };\n  useEffect(() => {\n    fetchPortfolio();\n    const interval = setInterval(fetchPortfolio, 6000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      background: 'linear-gradient(to right, #0f2027, #203a43, #2c5364)',\n      borderRadius: 3,\n      boxShadow: '0 0 12px rgba(0,255,170,0.2)',\n      color: '#e0f7fa'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      sx: {\n        color: '#00ffc6',\n        textShadow: '0 0 4px #00ffc6',\n        fontWeight: 'bold',\n        mb: 2\n      },\n      children: \"Virtual Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 4,\n      sx: {\n        backgroundColor: '#112D4E',\n        borderRadius: 3,\n        overflowX: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              backgroundColor: '#0F3460'\n            },\n            children: ['Symbol', 'Qty', 'Avg Buy Price', 'Current Price', 'Market Value', 'Unrealized P/L'].map((heading, i) => /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: '#00ffc6',\n                fontWeight: 'bold'\n              },\n              children: heading\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: portfolio.map((row, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:hover': {\n                backgroundColor: '#1B1F3B',\n                cursor: 'pointer'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.qty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"$\", row.avgBuyPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"$\", row.currentPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"$\", row.marketValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: row.unrealizedPL >= 0 ? '#00ff7f' : '#ff4d4d'\n              },\n              children: [\"$\", row.unrealizedPL]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Invested:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), \" $\", summary.totalInvested]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Market Value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), \" $\", summary.totalMarketValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: summary.totalPL >= 0 ? '#00ff7f' : '#ff4d4d'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total P/L:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), \" $\", summary.totalPL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioScreen, \"LF5UArC8zC77cDC8IMfFx1roWVE=\");\n_c = PortfolioScreen;\nexport default PortfolioScreen;\nvar _c;\n$RefreshReg$(_c, \"PortfolioScreen\");","map":{"version":3,"names":["axios","React","useEffect","useState","Table","TableHead","TableBody","TableRow","TableCell","Paper","Typography","Box","jsxDEV","_jsxDEV","PortfolioScreen","_s","portfolio","setPortfolio","summary","setSummary","fetchPortfolio","token","localStorage","getItem","response","get","headers","Authorization","data","err","console","error","interval","setInterval","clearInterval","sx","p","background","borderRadius","boxShadow","color","children","variant","gutterBottom","textShadow","fontWeight","mb","fileName","_jsxFileName","lineNumber","columnNumber","elevation","backgroundColor","overflowX","map","heading","i","row","cursor","symbol","qty","avgBuyPrice","currentPrice","marketValue","unrealizedPL","mt","totalInvested","totalMarketValue","totalPL","_c","$RefreshReg$"],"sources":["D:/Web-Development/TradingApplication/frontend/src/components/Dashboard/PortfolioForm.jsx"],"sourcesContent":["import axios from '../../api/axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n} from '@mui/material';\r\n\r\nconst PortfolioScreen = () => {\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [summary, setSummary] = useState({});\r\n\r\n  const fetchPortfolio = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('http://localhost:5000/api/portfolio', {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      // Demo only: populate data\r\n      setPortfolio(response.data.portfolio || []);\r\n      setSummary(response.data.summary || {});\r\n    } catch (err) {\r\n      console.error('Failed to fetch portfolio:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPortfolio();\r\n    const interval = setInterval(fetchPortfolio, 6000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 3,\r\n        background: 'linear-gradient(to right, #0f2027, #203a43, #2c5364)',\r\n        borderRadius: 3,\r\n        boxShadow: '0 0 12px rgba(0,255,170,0.2)',\r\n        color: '#e0f7fa',\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h5\"\r\n        gutterBottom\r\n        sx={{\r\n          color: '#00ffc6',\r\n          textShadow: '0 0 4px #00ffc6',\r\n          fontWeight: 'bold',\r\n          mb: 2,\r\n        }}\r\n      >\r\n        Virtual Portfolio\r\n      </Typography>\r\n\r\n      <Paper\r\n        elevation={4}\r\n        sx={{\r\n          backgroundColor: '#112D4E',\r\n          borderRadius: 3,\r\n          overflowX: 'auto',\r\n        }}\r\n      >\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow sx={{ backgroundColor: '#0F3460' }}>\r\n              {['Symbol', 'Qty', 'Avg Buy Price', 'Current Price', 'Market Value', 'Unrealized P/L'].map((heading, i) => (\r\n                <TableCell key={i} sx={{ color: '#00ffc6', fontWeight: 'bold' }}>\r\n                  {heading}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {portfolio.map((row, i) => (\r\n              <TableRow\r\n                key={i}\r\n                sx={{\r\n                  '&:hover': {\r\n                    backgroundColor: '#1B1F3B',\r\n                    cursor: 'pointer',\r\n                  },\r\n                }}\r\n              >\r\n                <TableCell>{row.symbol}</TableCell>\r\n                <TableCell>{row.qty}</TableCell>\r\n                <TableCell>${row.avgBuyPrice}</TableCell>\r\n                <TableCell>${row.currentPrice}</TableCell>\r\n                <TableCell>${row.marketValue}</TableCell>\r\n                <TableCell sx={{ color: row.unrealizedPL >= 0 ? '#00ff7f' : '#ff4d4d' }}>\r\n                  ${row.unrealizedPL}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n\r\n      <Box mt={3}>\r\n        <Typography>\r\n          <strong>Total Invested:</strong> ${summary.totalInvested}\r\n        </Typography>\r\n        <Typography>\r\n          <strong>Market Value:</strong> ${summary.totalMarketValue}\r\n        </Typography>\r\n        <Typography sx={{ color: summary.totalPL >= 0 ? '#00ff7f' : '#ff4d4d' }}>\r\n          <strong>Total P/L:</strong> ${summary.totalPL}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PortfolioScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}