{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web-Development\\\\TradingApplication\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\PortfolioForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../../api/axios';\nimport { Table, TableHead, TableRow, TableCell, TableBody, Paper, Typography, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PortfolioScreen() {\n  _s();\n  const [portfolio, setPortfolio] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPortfolio = async () => {\n      try {\n        const response = await axios.get('/portfolio');\n        let data = response.data;\n        if (!Array.isArray(data)) {\n          data = data.portfolio || [];\n        }\n        const formattedData = data.map(item => {\n          const avgBuyPrice = parseFloat(item.avgBuyPrice) || 0;\n          const currentValue = parseFloat(item.marketValue) || 0;\n          const quantity = parseFloat(item.qty) || 0;\n          const profitLoss = (currentValue - avgBuyPrice) * quantity;\n          return {\n            ...item,\n            avgBuyPrice,\n            currentValue,\n            quantity,\n            profitLoss\n          };\n        });\n        setPortfolio(formattedData);\n      } catch (error) {\n        console.error('Failed to load portfolio', error);\n        setPortfolio([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPortfolio();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      mt: 4,\n      mb: 2,\n      sx: {\n        textAlign: \"center\",\n        background: 'linear-gradient(to right, #0f2027, #203a43, #2c5364)',\n        borderRadius: 2,\n        boxShadow: '0 0 12px rgba(0, 255, 170, 0.2)',\n        padding: \"10px\",\n        borderRadius: \"8px\",\n        fontWeight: \"bold\",\n        color: '#00ffcc',\n        fontWeight: 'bold',\n        textShadow: '0 0 3px #00ffcc'\n      },\n      children: \"Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            textAlign: \"center\",\n            background: 'linear-gradient(to right, #0f2027, #203a43, #2c5364)',\n            borderRadius: 2,\n            boxShadow: '0 0 12px rgba(0, 255, 170, 0.2)',\n            padding: \"10px\",\n            borderRadius: \"8px\",\n            fontWeight: \"bold\",\n            color: '#00ffcc',\n            fontWeight: 'bold',\n            textShadow: '0 0 3px #00ffcc',\n            font\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Avg Buy Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Current Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Profit / Loss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: portfolio.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.avgBuyPrice.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.currentValue.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: row.profitLoss >= 0 ? 'green' : 'red'\n            },\n            children: row.profitLoss.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(PortfolioScreen, \"UZH8qwbXm3/G2w/Havr+2ZNNbmc=\");\n_c = PortfolioScreen;\nvar _c;\n$RefreshReg$(_c, \"PortfolioScreen\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","TableHead","TableRow","TableCell","TableBody","Paper","Typography","CircularProgress","jsxDEV","_jsxDEV","PortfolioScreen","_s","portfolio","setPortfolio","loading","setLoading","fetchPortfolio","response","get","data","Array","isArray","formattedData","map","item","avgBuyPrice","parseFloat","currentValue","marketValue","quantity","qty","profitLoss","error","console","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","children","variant","mt","mb","sx","textAlign","background","borderRadius","boxShadow","fontWeight","color","textShadow","font","row","index","symbol","toFixed","_c","$RefreshReg$"],"sources":["D:/Web-Development/TradingApplication/frontend/src/components/Dashboard/PortfolioForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from '../../api/axios';\r\nimport \r\n{ \r\n  Table, \r\n  TableHead, \r\n  TableRow,\r\n  TableCell, \r\n  TableBody, \r\n  Paper, \r\n  Typography, \r\n  CircularProgress \r\n} from '@mui/material';\r\nexport default function PortfolioScreen() \r\n{\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => \r\n  {\r\n    const fetchPortfolio = async () => \r\n    {\r\n      try \r\n      {\r\n        const response = await axios.get('/portfolio');\r\n        let data = response.data;\r\n        if (!Array.isArray(data)) \r\n        {\r\n          data = data.portfolio || []; \r\n        }\r\n        const formattedData = data.map((item) => \r\n        {\r\n          const avgBuyPrice = parseFloat(item.avgBuyPrice) || 0;\r\n          const currentValue = parseFloat(item.marketValue) || 0;\r\n          const quantity = parseFloat(item.qty) || 0;\r\n          const  profitLoss = ((currentValue - avgBuyPrice) * quantity);\r\n          return {\r\n            ...item,\r\n            avgBuyPrice,\r\n            currentValue,\r\n            quantity,\r\n            profitLoss,\r\n          };\r\n        });\r\n        setPortfolio(formattedData);\r\n      } \r\n      catch (error) \r\n      {\r\n        console.error('Failed to load portfolio', error);\r\n        setPortfolio([]);\r\n      } \r\n      finally \r\n      {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPortfolio();\r\n  }, []);\r\n  if (loading) return <CircularProgress />;\r\n  return (\r\n    <Paper style={{ padding: 20 }}>\r\n      <Typography\r\n          variant=\"h5\"\r\n          mt={4}\r\n          mb={2}\r\n          sx={{\r\n              textAlign: \"center\",\r\n              background: 'linear-gradient(to right, #0f2027, #203a43, #2c5364)',\r\n              borderRadius: 2,\r\n              boxShadow: '0 0 12px rgba(0, 255, 170, 0.2)',\r\n              padding: \"10px\",\r\n              borderRadius: \"8px\",\r\n              fontWeight: \"bold\",\r\n              color: '#00ffcc',\r\n              fontWeight: 'bold',\r\n              textShadow: '0 0 3px #00ffcc',\r\n          }}\r\n      >\r\n        Portfolio\r\n      </Typography>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow sx={{\r\n              textAlign: \"center\",\r\n              background: 'linear-gradient(to right, #0f2027, #203a43, #2c5364)',\r\n              borderRadius: 2,\r\n              boxShadow: '0 0 12px rgba(0, 255, 170, 0.2)',\r\n              padding: \"10px\",\r\n              borderRadius: \"8px\",\r\n              fontWeight: \"bold\",\r\n              color: '#00ffcc',\r\n              fontWeight: 'bold',\r\n              textShadow: '0 0 3px #00ffcc',\r\n              font\r\n          }}>\r\n            <TableCell>Symbol</TableCell>\r\n            <TableCell>Quantity</TableCell>\r\n            <TableCell>Avg Buy Price</TableCell>\r\n            <TableCell>Current Value</TableCell>\r\n            <TableCell>Profit / Loss</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {portfolio.map((row, index) => (\r\n            <TableRow key={index}>\r\n              <TableCell>{row.symbol}</TableCell>\r\n              <TableCell>{row.quantity}</TableCell>\r\n              <TableCell>{row.avgBuyPrice.toFixed(2)}</TableCell>\r\n              <TableCell>{row.currentValue.toFixed(2)}</TableCell>\r\n              <TableCell\r\n                style={{ color: row.profitLoss >= 0 ? 'green' : 'red' }}\r\n              >\r\n              {row.profitLoss.toFixed(2)}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}