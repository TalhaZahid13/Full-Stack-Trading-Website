{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web-Development\\\\TradingApplication\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\PortfolioForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table, TableHead, TableBody, TableRow, TableCell, Paper, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioScreen = () => {\n  _s();\n  const [portfolio, setPortfolio] = useState([]);\n  const [summary, setSummary] = useState({});\n  const fetchPortfolio = async () => {\n    try {\n      const res = await axios.get('/api/portfolio');\n      setPortfolio(res.data.portfolio);\n      setSummary(res.data.summary);\n    } catch (err) {\n      console.error('Failed to fetch portfolio:', err);\n    }\n  };\n  useEffect(() => {\n    fetchPortfolio();\n    const interval = setInterval(fetchPortfolio, 6000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Virtual Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Qty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Avg Buy Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Current Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Market Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Unrealized P/L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: portfolio.map((row, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.qty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"$\", row.avgBuyPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"$\", row.currentPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"$\", row.marketValue]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: row.unrealizedPL >= 0 ? 'green' : 'red'\n              },\n              children: [\"$\", row.unrealizedPL]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Invested:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), \" $\", summary.totalInvested]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Market Value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), \" $\", summary.totalMarketValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: summary.totalPL >= 0 ? 'green' : 'red'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total P/L:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), \" $\", summary.totalPL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioScreen, \"LF5UArC8zC77cDC8IMfFx1roWVE=\");\n_c = PortfolioScreen;\nexport default PortfolioScreen;\nvar _c;\n$RefreshReg$(_c, \"PortfolioScreen\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","TableHead","TableBody","TableRow","TableCell","Paper","Typography","Box","jsxDEV","_jsxDEV","PortfolioScreen","_s","portfolio","setPortfolio","summary","setSummary","fetchPortfolio","res","get","data","err","console","error","interval","setInterval","clearInterval","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","row","i","symbol","qty","avgBuyPrice","currentPrice","marketValue","style","color","unrealizedPL","mt","totalInvested","totalMarketValue","totalPL","_c","$RefreshReg$"],"sources":["D:/Web-Development/TradingApplication/frontend/src/components/Dashboard/PortfolioForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, TableHead, TableBody, TableRow, TableCell, Paper, Typography, Box } from '@mui/material';\r\nconst PortfolioScreen = () => \r\n{\r\n  const [portfolio, setPortfolio] = useState([]);\r\n  const [summary, setSummary] = useState({});\r\n  const fetchPortfolio = async () => \r\n  {\r\n    try \r\n    {\r\n      const res = await axios.get('/api/portfolio');\r\n      setPortfolio(res.data.portfolio);\r\n      setSummary(res.data.summary);\r\n    } \r\n    catch (err)\r\n    {\r\n      console.error('Failed to fetch portfolio:', err);\r\n    }\r\n  };\r\n  useEffect(() => \r\n  {\r\n    fetchPortfolio();\r\n    const interval = setInterval(fetchPortfolio, 6000);\r\n    return () => clearInterval(interval);\r\n  }, []\r\n);\r\n\r\n  return (\r\n    <Box p={3}>\r\n      <Typography variant=\"h5\" gutterBottom>Virtual Portfolio</Typography>\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Symbol</TableCell>\r\n              <TableCell>Qty</TableCell>\r\n              <TableCell>Avg Buy Price</TableCell>\r\n              <TableCell>Current Price</TableCell>\r\n              <TableCell>Market Value</TableCell>\r\n              <TableCell>Unrealized P/L</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {portfolio.map((row, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>{row.symbol}</TableCell>\r\n                <TableCell>{row.qty}</TableCell>\r\n                <TableCell>${row.avgBuyPrice}</TableCell>\r\n                <TableCell>${row.currentPrice}</TableCell>\r\n                <TableCell>${row.marketValue}</TableCell>\r\n                <TableCell\r\n                  style={{ color: row.unrealizedPL >= 0 ? 'green' : 'red' }}\r\n                >\r\n                  ${row.unrealizedPL}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n\r\n      <Box mt={3}>\r\n        <Typography><strong>Total Invested:</strong> ${summary.totalInvested}</Typography>\r\n        <Typography><strong>Market Value:</strong> ${summary.totalMarketValue}</Typography>\r\n        <Typography style={{ color: summary.totalPL >= 0 ? 'green' : 'red' }}>\r\n          <strong>Total P/L:</strong> ${summary.totalPL}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PortfolioScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}